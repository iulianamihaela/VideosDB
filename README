POO - VideosDB
Pana Mihaela Iuliana, 322CD

In implementare am incercat separarea functionalitatii cat de mult am putut, pentru a avea codul cat mai curat. Astfel,
clasa VideosDB este entry point-ul rezolvarii problemei date. Clasa Database simuleaza o baza de date ce retine
filmele, serialele, actorii si utilizatorii, pentru a avea o unica sursa de adevar.

Codul este destul de explicit (in vederea numirii metodelor si variabilelor), iar modul de implementare este deja
explicat in cerinta, ceea ce duce la o dimensiune mica a readme-ului.

Citirea user-ilor, filmelor, serialelor si actorilor s-a facut prin maparea claselor MovieInputData, SerialInputData,
ActorInputData si UserInputData la Movie, Serial, Actor, respectiv User. Datele de intrare sunt transmise ca si
parametrii in constructorii claselor definite de noi. Clasele Serial si Movie mostenesc clasa abstracta Video, in
vederea realizarii unei solutii cat mai extensibile si modularizate.

In mod normal, clasa Database ar putea fi construita ca un singleton insa, pentru a simula un caz real (cand o aplicatie
se poate conecta la mai multe baze de date ce pastreaza aceeasi structura) am evitat acest pattern.

Rezolvarea propriu-zisa a actiunilor se desfasoara prin intermediul claselor definite in pachetul "actions", cat si in
subpachetele "queries" si "recomandations" (din cadrul actions). Pentru a evita instantieri in mod repetat, clasele
contin doar functii statice.

Am preferat separarea filmelor de seriale pentru a putea avea o organizare directa permitand astfel extinderea unui
singur tip de video (film sau serial). Avand deja o componenta ce se comporta diferit (rating), am considerat ca,
in cazul in care se doreste extinderea, respectiv separarea lor, aceasta sa fie realizata mai usor.

String-urile ce se repeta le-am amplasat in cadrul clasei de Constante, pentru a evita orice typo ce poate duce la
bug-uri foarte greu sesizabile.

